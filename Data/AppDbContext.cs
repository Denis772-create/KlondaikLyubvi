using Microsoft.EntityFrameworkCore;

namespace KlondaikLyubvi.Data
{
    public class AppDbContext : DbContext
    {
        public DbSet<User> Users { get; set; }
        public DbSet<LoveNote> LoveNotes { get; set; }
        public DbSet<Photo> Photos { get; set; }
        public DbSet<BucketItem> BucketItems { get; set; }
        public DbSet<StoreItem> StoreItems { get; set; }
        public DbSet<Event> Events { get; set; }
        public DbSet<LoveCoinTransaction> LoveCoinTransactions { get; set; }

        public AppDbContext(DbContextOptions<AppDbContext> options) : base(options) { }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            // Seed users
            modelBuilder.Entity<User>().HasData(
                new User { Id = 1, UserName = "denis", DisplayName = "–î–µ–Ω–∏—Å", PasswordHash = "denis" },
                new User { Id = 2, UserName = "liza", DisplayName = "–õ–∏–∑–∞", PasswordHash = "liza" }
            );
            // Seed store items
            modelBuilder.Entity<StoreItem>().HasData(
                new StoreItem { Id = 1, Name = "üíÜ‚Äç‚ôÄÔ∏è –ú–∞—Å—Å–∞–∂ –Ω–∞ 20 –º–∏–Ω—É—Ç", Description = "–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π –º–∞—Å—Å–∞–∂ –æ—Ç –≤–∞—à–µ–≥–æ –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞", Price = 5, Emoji = "üíÜ‚Äç‚ôÄÔ∏è", UserId = 1 },
                new StoreItem { Id = 2, Name = "üç≥ –ó–∞–≤—Ç—Ä–∞–∫ –≤ –ø–æ—Å—Ç–µ–ª—å", Description = "–í–∫—É—Å–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫ –∏ –∫–æ—Ñ–µ, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ —Å –ª—é–±–æ–≤—å—é", Price = 4, Emoji = "üç≥", UserId = 1 },
                new StoreItem { Id = 3, Name = "üé• –í–µ—á–µ—Ä —Ñ–∏–ª—å–º–æ–≤", Description = "–í—ã–±–æ—Ä —Ñ–∏–ª—å–º–∞, –ø–ª–µ–¥ –∏ –æ–±—ä—è—Ç–∏—è", Price = 3, Emoji = "üé•", UserId = 2 },
                new StoreItem { Id = 4, Name = "üõÅ –°–æ–≤–º–µ—Å—Ç–Ω–∞—è –≤–∞–Ω–Ω–∞", Description = "–°–≤–µ—á–∏, –º—É–∑—ã–∫–∞ –∏ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ –≤–¥–≤–æ—ë–º", Price = 7, Emoji = "üõÅ", UserId = 2 }
            );
        }
    }

    public class User
    {
        public int Id { get; set; }
        public string UserName { get; set; } = string.Empty;
        public string DisplayName { get; set; } = string.Empty;
        public string PasswordHash { get; set; } = string.Empty;
        public int LovePoints { get; set; } = 12; // –ë–∞–ª–∞–Ω—Å –ø–æ—Ü–µ–ª—É–µ–≤
        public DateTime? LastVisit { get; set; }
    }

    public class LoveNote
    {
        public int Id { get; set; }
        public string Text { get; set; } = string.Empty;
        public DateTime Date { get; set; }
        public int UserId { get; set; }
        public User? User { get; set; }
    }

    public class Photo
    {
        public int Id { get; set; }
        public string FileName { get; set; } = string.Empty;
        public DateTime UploadedAt { get; set; }
        public int UserId { get; set; }
        public User? User { get; set; }
    }

    public class BucketItem
    {
        public int Id { get; set; }
        public string Title { get; set; } = string.Empty;
        public string? Description { get; set; }
        public bool IsCompleted { get; set; }
        public int Progress { get; set; } // 0-100
        public int UserId { get; set; }
        public User? User { get; set; }
    }

    public class StoreItem
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string? Description { get; set; }
        public int Price { get; set; } // –í –ø–æ—Ü–µ–ª—É—è—Ö
        public string Emoji { get; set; } = string.Empty;
        public int UserId { get; set; } // –í–ª–∞–¥–µ–ª–µ—Ü —Ç–æ–≤–∞—Ä–∞
        public User? User { get; set; }
    }

    public class Event
    {
        public int Id { get; set; }
        public string Title { get; set; } = string.Empty;
        public string? Description { get; set; }
        public DateTime Date { get; set; }
        public int UserId { get; set; }
        public User? User { get; set; }
    }

    public class LoveCoinTransaction
    {
        public int Id { get; set; }
        public int UserId { get; set; }
        public User? User { get; set; }
        public int StoreItemId { get; set; }
        public StoreItem? StoreItem { get; set; }
        public DateTime Date { get; set; }
        public bool IsGift { get; set; }
        public int? ToUserId { get; set; }
        public User? ToUser { get; set; }
        public DateTime? ExecutionDate { get; set; }
        public bool IsExecuted { get; set; } = false;
        public DateTime? GiftStartDate { get; set; }
        public DateTime? GiftEndDate { get; set; }
        public int GiftCount { get; set; } = 1;
    }
} 