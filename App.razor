@using KlondaikLyubvi.Pages
@inject IJSRuntime JS
@inject NavigationManager Nav

@if (!checkedAuth)
{
    <div class="min-h-screen flex items-center justify-center bg-pink-50">
        <div class="heart-loading text-3xl sm:text-4xl text-pink-500">
            <span>💗</span>
            <span>💞</span>
            <span>💗</span>
        </div>
    </div>
}
else if (!isLoggedIn)
{
    <Login />
}
else
{
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" />
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <p role="alert">Sorry, there's nothing at this address.</p>
        </NotFound>
    </Router>
}

<style>
  .heart-loading span { display:inline-block; animation: beat 1s ease-in-out infinite; }
  .heart-loading span:nth-child(2) { animation-delay: .15s; }
  .heart-loading span:nth-child(3) { animation-delay: .30s; }
  @@keyframes beat {
    0%, 100% { transform: scale(1); opacity: .8; }
    50% { transform: scale(1.25); opacity: 1; }
  }
</style>

@code {
    bool isLoggedIn;
    bool checkedAuth = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !checkedAuth)
        {
            var userId = await JS.InvokeAsync<string>("blazorGetCookie", "userId");
            isLoggedIn = !string.IsNullOrEmpty(userId);
            checkedAuth = true;
            if (!isLoggedIn && Nav.Uri != Nav.BaseUri + "login")
            {
                Nav.NavigateTo("/login", true);
            }
            StateHasChanged();
        }
    }
}
